-- require 'image'
-- npy4th = require 'npy4th'
-- -- require 'data_aflw';
-- require 'data_animal';
-- require 'cunn'
-- require 'cudnn'
-- require 'nn';
-- require 'optim'
-- -- require 'stn'
-- npy4th=require 'npy4th';
-- require 'torchx';
-- require 'gnuplot';
-- dump=require 'dump';
-- tps_helper=require 'tps_helper';
-- visualize=require 'visualize';
-- loss_helper=require 'loss_helper';



require 'loadcaffe';
require 'cunn'
require 'cudnn'
require 'nn';
require 'image';
npy4th=require 'npy4th'


local path_caffe_alexnet='../models/bvlc_alexnet.caffemodel';
local path_deploy='../models/deploy.prototxt';
local model = loadcaffe.load(path_deploy,path_caffe_alexnet, 'cudnn')

print (model)

-- function main(params)
	
-- end

-- cmd = torch.CmdLine()
-- cmd:text()
-- cmd:text('Train Face network')
-- cmd:text()
-- cmd:text('Options')

-- local epoch_size=56;
-- -- 56;

-- cmd:option('-model','../models/vanilla_scratch_bn_large.dat');

-- cmd:option('-inputSize',227,'size of input image');
-- cmd:option('-mean_im_path','../data/horse_mean.png');
-- cmd:option('-std_im_path','../data/horse_std.png');


-- cmd:option('-limit',-1,'num of training data to read');
-- cmd:option('-iterations',150*epoch_size,'num of iterations to run');
-- cmd:option('-saveAfter',30*epoch_size,'num of iterations after which to save model');
-- cmd:option('-batchSize',64,'batch size');
-- cmd:option('-testAfter',30,'num iterations after which to get validation loss');
-- cmd:option('-dispAfter',1,'num iterations after which to display training loss');
-- cmd:option('-dispPlotAfter',30,'num iterations after which to display training loss');

-- cmd:option('-val_data_path','../data/test_minloss_horse_old.txt')
-- cmd:option('-data_path','../data/train_horse_minloss.txt')

-- cmd:option('learningRate', 1e-2)
-- cmd:option('learningRateDecay',5e-6)
-- cmd:option('beta1', 0.9)
-- cmd:option('beta2', 0.999)
-- cmd:option('epsilon', 1e-8)
-- cmd:option('augmentation' , true);

-- cmd:option('decreaseAfter',100*epoch_size);
-- cmd:option('-gpu',1,'gpu to run the training on');
-- cmd:text()

-- cmd:option('-outDir','/disk2/horse_cvpr/scratch_rebuttal');
-- params = cmd:parse(arg)
-- main(params);

-- -- cmd:option('-iterations',2,'num of iterations to run');
-- -- cmd:option('-batchSize',100,'batch size');
-- -- cmd:option('-outDirTest',paths.concat(params.outDir,'test_images'));
-- -- cmd:option('-model',paths.concat(params.outDir,'final/model_all_final.dat'));
-- -- params = cmd:parse(arg)
-- -- test(params);

